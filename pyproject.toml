# pyproject.toml
[project]
name = "app"
version = "0.1.0"
description = "Python Project Skeleton"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.11",
    "httpx>=0.28.1",
    "uvicorn[standard]>=0.34.0",
]

[project.scripts]
app = "app.main:main"

[tool.poetry]
name = "app"
version = "0.1.0"
description = "Python Project Skeleton"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.12"
fastapi = "^0.115.11"
httpx = "^0.28.1"
uvicorn = {version = "^0.34.3", extras = ["standard"]}

[tool.poetry.group.dev.dependencies]
mypy = "^1.16.0"
pre-commit = "^4.2.0"
ruff = "^0.11.13"
pytest = "^8.4.0"
pytest-cov = "^6.2.1"
pytest-env = "^1.1.5"
bandit = {version = "^1.8.3", extras = ["toml"]}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"

# Additional Options
# Comment line below, and uncomment the line below that to be able to debug pytests
addopts = "-ra --import-mode=importlib --cov=./src --cov-fail-under=80 --no-cov-on-fail --cov-report=term:skip-covered --cov-report=html:build/reports/coverage --cov-branch"
# addopts = "-ra --no-cov"

# Path to tests run by the command pytest. Tests in the folders `end_to_end` and `integration` typically require other applications to be running and are excluded
testpaths = [
    "test"
]

# Environment variables to use in pytests
env = [
    "DEBUG=True"
]

[tool.coverage.run]
# The following files are for development purposes and are not part of the coverage report
omit = []
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
show_missing = true

[tool.ruff]
line-length = 127
target-version = "py312"
exclude = [".git", "__pycache__", "build", "dist"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
]
ignore = []

[tool.ruff.format]
quote-style = "single"
line-ending = "lf"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.12"
plugins = ['pydantic.mypy']
strict = true
ignore_missing_imports = true
exclude = ["scripts"]

[tool.bandit]
exclude_dirs = ["tests", "test", "integration", "end_to_end"]
severity = "LOW"
confidence = "HIGH"
# Add configuration to ignore assert statements in test files
skips = ["B101"]
